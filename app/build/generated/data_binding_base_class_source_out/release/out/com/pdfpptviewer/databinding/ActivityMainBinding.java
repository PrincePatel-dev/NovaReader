// Generated by view binder compiler. Do not edit!
package com.pdfpptviewer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.pdfpptviewer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SwitchMaterial darkModeSwitch;

  @NonNull
  public final MaterialButton openPdfButton;

  @NonNull
  public final MaterialButton openPptButton;

  @NonNull
  public final MaterialCardView settingsCard;

  @NonNull
  public final MaterialCardView statusCard;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView titleText;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull SwitchMaterial darkModeSwitch, @NonNull MaterialButton openPdfButton,
      @NonNull MaterialButton openPptButton, @NonNull MaterialCardView settingsCard,
      @NonNull MaterialCardView statusCard, @NonNull TextView statusText,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.darkModeSwitch = darkModeSwitch;
    this.openPdfButton = openPdfButton;
    this.openPptButton = openPptButton;
    this.settingsCard = settingsCard;
    this.statusCard = statusCard;
    this.statusText = statusText;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.darkModeSwitch;
      SwitchMaterial darkModeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (darkModeSwitch == null) {
        break missingId;
      }

      id = R.id.openPdfButton;
      MaterialButton openPdfButton = ViewBindings.findChildViewById(rootView, id);
      if (openPdfButton == null) {
        break missingId;
      }

      id = R.id.openPptButton;
      MaterialButton openPptButton = ViewBindings.findChildViewById(rootView, id);
      if (openPptButton == null) {
        break missingId;
      }

      id = R.id.settingsCard;
      MaterialCardView settingsCard = ViewBindings.findChildViewById(rootView, id);
      if (settingsCard == null) {
        break missingId;
      }

      id = R.id.statusCard;
      MaterialCardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, darkModeSwitch, openPdfButton,
          openPptButton, settingsCard, statusCard, statusText, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
